[{"segments": [{"start": {"identity": 20732, "labels": ["method"], "properties": {"name": "javax.swing.JTextField.setFont(Font)", "className": "javax.swing.JTextField"}}, "relationship": {"identity": 85154, "start": 20732, "end": 3154, "type": "c_o", "properties": {"description": "java.awt.Container.invalidate() is called after setting the new font", "value": "precede"}}, "end": {"identity": 3154, "labels": ["method"], "properties": {"name": "java.awt.Container.invalidate()", "className": "java.awt.Container"}}}]},
{"segments": [{"start": {"identity": 20713, "labels": ["method"], "properties": {"name": "javax.swing.JTextArea.setColumns(int)", "className": "javax.swing.JTextArea"}}, "relationship": {"identity": 85153, "start": 20713, "end": 3155, "type": "c_o", "properties": {"description": "Does an java.awt.Container.validate() after setting the new value", "value": "precede"}}, "end": {"identity": 3155, "labels": ["method"], "properties": {"name": "java.awt.Container.validate()", "className": "java.awt.Container"}}}]},
{"segments": [{"start": {"identity": 20710, "labels": ["method"], "properties": {"name": "javax.swing.JTextArea.setRows(int)", "className": "javax.swing.JTextArea"}}, "relationship": {"identity": 85152, "start": 20710, "end": 3155, "type": "c_o", "properties": {"description": "javax.swing.JTextArea.setRows(int) calls java.awt.Container.validate() after setting the new value", "value": "precede"}}, "end": {"identity": 3155, "labels": ["method"], "properties": {"name": "java.awt.Container.validate()", "className": "java.awt.Container"}}}]},
{"segments": [{"start": {"identity": 20134, "labels": ["method"], "properties": {"name": "javax.swing.JPasswordField.updateUI()", "className": "javax.swing.JPasswordField"}}, "relationship": {"identity": 85151, "start": 20134, "end": 3155, "type": "c_o", "properties": {"description": "java.awt.Container.validate() is called after setting the UI", "value": "precede"}}, "end": {"identity": 3155, "labels": ["method"], "properties": {"name": "java.awt.Container.validate()", "className": "java.awt.Container"}}}]},
{"segments": [{"start": {"identity": 3955, "labels": ["method"], "properties": {"name": "java.awt.Polygon.invalidate()", "className": "java.awt.Polygon"}}, "relationship": {"identity": 85131, "start": 3955, "end": 3958, "type": "c_o", "properties": {"description": "java.awt.Polygon.invalidate() should be called after any direct manipulation of the coordinates in the xpoints or ypoints arrays to avoid inconsistent results from methods such as java.awt.Polygon.getBounds()  that might cache data from earlier computations relating to the vertex coordinates", "value": "precede"}}, "end": {"identity": 3958, "labels": ["method"], "properties": {"name": "java.awt.Polygon.getBounds()", "className": "java.awt.Polygon"}}}]},
{"segments": [{"start": {"identity": 7314, "labels": ["method"], "properties": {"name": "java.lang.ClassLoader.definePackage(String,String,String,String,String,String,String,URL)", "className": "java.lang.ClassLoader"}}, "relationship": {"identity": 85133, "start": 7314, "end": 7295, "type": "c_o", "properties": {"description": "Packages must be created before the class is defined, and package names must be unique within a class loader and cannot be redefined or changed once created", "value": "follow"}}, "end": {"identity": 7295, "labels": ["method"], "properties": {"name": "java.lang.ClassLoader.defineClass(byte[],int,int)", "className": "java.lang.ClassLoader"}}}]},
{"segments": [{"start": {"identity": 7314, "labels": ["method"], "properties": {"name": "java.lang.ClassLoader.definePackage(String,String,String,String,String,String,String,URL)", "className": "java.lang.ClassLoader"}}, "relationship": {"identity": 85134, "start": 7314, "end": 7296, "type": "c_o", "properties": {"description": "Packages must be created before the class is defined, and package names must be unique within a class loader and cannot be redefined or changed once created", "value": "follow"}}, "end": {"identity": 7296, "labels": ["method"], "properties": {"name": "java.lang.ClassLoader.defineClass(String,byte[],int,int)", "className": "java.lang.ClassLoader"}}}]},
{"segments": [{"start": {"identity": 7314, "labels": ["method"], "properties": {"name": "java.lang.ClassLoader.definePackage(String,String,String,String,String,String,String,URL)", "className": "java.lang.ClassLoader"}}, "relationship": {"identity": 85135, "start": 7314, "end": 7297, "type": "c_o", "properties": {"description": "Packages must be created before the class is defined, and package names must be unique within a class loader and cannot be redefined or changed once created", "value": "follow"}}, "end": {"identity": 7297, "labels": ["method"], "properties": {"name": "java.lang.ClassLoader.defineClass(String,byte[],int,int,ProtectionDomain)", "className": "java.lang.ClassLoader"}}}]},
{"segments": [{"start": {"identity": 7314, "labels": ["method"], "properties": {"name": "java.lang.ClassLoader.definePackage(String,String,String,String,String,String,String,URL)", "className": "java.lang.ClassLoader"}}, "relationship": {"identity": 85136, "start": 7314, "end": 7298, "type": "c_o", "properties": {"description": "Packages must be created before the class is defined, and package names must be unique within a class loader and cannot be redefined or changed once created", "value": "follow"}}, "end": {"identity": 7298, "labels": ["method"], "properties": {"name": "java.lang.ClassLoader.defineClass(String,ByteBuffer,ProtectionDomain)", "className": "java.lang.ClassLoader"}}}]},
{"segments": [{"start": {"identity": 7679, "labels": ["method"], "properties": {"name": "java.lang.SecurityManager.checkRead(String,Object)", "className": "java.lang.SecurityManager"}}, "relationship": {"identity": 85169, "start": 7679, "end": 7668, "type": "c_o", "properties": {"description": "the specified security context must be a security context returned by a previous call to java.lang.SecurityManager.getSecurityContext().", "value": "follow"}}, "end": {"identity": 7668, "labels": ["method"], "properties": {"name": "java.lang.SecurityManager.getSecurityContext()", "className": "java.lang.SecurityManager"}}}]},
{"segments": [{"start": {"identity": 9052, "labels": ["method"], "properties": {"name": "java.nio.Buffer.rewind()", "className": "java.nio.Buffer"}}, "relationship": {"identity": 85137, "start": 9052, "end": 9072, "type": "c_o", "properties": {"description": "Invoke java.nio.Buffer.rewind() before a sequence of channel-write or get operations, assuming that the limit has already been set appropriately", "value": "precede"}}, "end": {"identity": 9072, "labels": ["method"], "properties": {"name": "java.nio.ByteBuffer.get(byte[])", "className": "java.nio.ByteBuffer"}}}]},
{"segments": [{"start": {"identity": 9052, "labels": ["method"], "properties": {"name": "java.nio.Buffer.rewind()", "className": "java.nio.Buffer"}}, "relationship": {"identity": 85138, "start": 9052, "end": 9133, "type": "c_o", "properties": {"description": "Invoke java.nio.Buffer.rewind() before a sequence of channel-write or get operations, assuming that the limit has already been set appropriately", "value": "precede"}}, "end": {"identity": 9133, "labels": ["method"], "properties": {"name": "java.nio.CharBuffer.get(char[])", "className": "java.nio.CharBuffer"}}}]},
{"segments": [{"start": {"identity": 9052, "labels": ["method"], "properties": {"name": "java.nio.Buffer.rewind()", "className": "java.nio.Buffer"}}, "relationship": {"identity": 85139, "start": 9052, "end": 9167, "type": "c_o", "properties": {"description": "Invoke java.nio.Buffer.rewind() before a sequence of channel-write or get operations, assuming that the limit has already been set appropriately", "value": "precede"}}, "end": {"identity": 9167, "labels": ["method"], "properties": {"name": "java.nio.DoubleBuffer.get(double[])", "className": "java.nio.DoubleBuffer"}}}]},
{"segments": [{"start": {"identity": 9052, "labels": ["method"], "properties": {"name": "java.nio.Buffer.rewind()", "className": "java.nio.Buffer"}}, "relationship": {"identity": 85140, "start": 9052, "end": 9192, "type": "c_o", "properties": {"description": "Invoke java.nio.Buffer.rewind() before a sequence of channel-write or get operations, assuming that the limit has already been set appropriately", "value": "precede"}}, "end": {"identity": 9192, "labels": ["method"], "properties": {"name": "java.nio.FloatBuffer.get(float[])", "className": "java.nio.FloatBuffer"}}}]},
{"segments": [{"start": {"identity": 9052, "labels": ["method"], "properties": {"name": "java.nio.Buffer.rewind()", "className": "java.nio.Buffer"}}, "relationship": {"identity": 85141, "start": 9052, "end": 9217, "type": "c_o", "properties": {"description": "Invoke java.nio.Buffer.rewind() before a sequence of channel-write or get operations, assuming that the limit has already been set appropriately", "value": "precede"}}, "end": {"identity": 9217, "labels": ["method"], "properties": {"name": "java.nio.IntBuffer.get(int[])", "className": "java.nio.IntBuffer"}}}]},
{"segments": [{"start": {"identity": 9052, "labels": ["method"], "properties": {"name": "java.nio.Buffer.rewind()", "className": "java.nio.Buffer"}}, "relationship": {"identity": 85142, "start": 9052, "end": 9242, "type": "c_o", "properties": {"description": "Invoke java.nio.Buffer.rewind() before a sequence of channel-write or get operations, assuming that the limit has already been set appropriately", "value": "precede"}}, "end": {"identity": 9242, "labels": ["method"], "properties": {"name": "java.nio.LongBuffer.get(long[])", "className": "java.nio.LongBuffer"}}}]},
{"segments": [{"start": {"identity": 9052, "labels": ["method"], "properties": {"name": "java.nio.Buffer.rewind()", "className": "java.nio.Buffer"}}, "relationship": {"identity": 85143, "start": 9052, "end": 9270, "type": "c_o", "properties": {"description": "Invoke java.nio.Buffer.rewind() before a sequence of channel-write or get operations, assuming that the limit has already been set appropriately", "value": "precede"}}, "end": {"identity": 9270, "labels": ["method"], "properties": {"name": "java.nio.ShortBuffer.get(short[])", "className": "java.nio.ShortBuffer"}}}]},
{"segments": [{"start": {"identity": 10035, "labels": ["method"], "properties": {"name": "java.security.KeyStore.Builder.getProtectionParameter(String)", "className": "java.security.KeyStore.Builder"}}, "relationship": {"identity": 85144, "start": 10035, "end": 10034, "type": "c_o", "properties": {"description": "java.security.KeyStore.Builder.getKeyStore() must be invoked before java.security.KeyStore.Builder.getProtectionParameter(String) may be called", "value": "follow"}}, "end": {"identity": 10034, "labels": ["method"], "properties": {"name": "java.security.KeyStore.Builder.getKeyStore()", "className": "java.security.KeyStore.Builder"}}}]},
{"segments": [{"start": {"identity": 12717, "labels": ["method"], "properties": {"name": "java.util.GregorianCalendar.getWeekYear()", "className": "java.util.GregorianCalendar"}}, "relationship": {"identity": 85145, "start": 12717, "end": 12493, "type": "c_o", "properties": {"description": "java.util.Calendar.complete() before calculating the week year", "value": "follow"}}, "end": {"identity": 12493, "labels": ["method"], "properties": {"name": "java.util.Calendar.complete()", "className": "java.util.Calendar"}}}]},
{"segments": [{"start": {"identity": 14862, "labels": ["method"], "properties": {"name": "java.util.regex.Matcher.appendTail(StringBuffer)", "className": "java.util.regex.Matcher"}}, "relationship": {"identity": 85146, "start": 14862, "end": 14861, "type": "c_o", "properties": {"description": "java.util.regex.Matcher.appendTail(StringBuffer) is intended to be invoked after one or more invocations of the java.util.regex.Matcher.appendReplacement(StringBuffer,String) method in order to copy the remainder of the input sequence", "value": "follow"}}, "end": {"identity": 14861, "labels": ["method"], "properties": {"name": "java.util.regex.Matcher.appendReplacement(StringBuffer,String)", "className": "java.util.regex.Matcher"}}}]},
{"segments": [{"start": {"identity": 15533, "labels": ["method"], "properties": {"name": "javax.imageio.ImageReader.getDefaultReadParam()", "className": "javax.imageio.ImageReader"}}, "relationship": {"identity": 85147, "start": 15533, "end": 15516, "type": "c_o", "properties": {"description": "javax.imageio.ImageReader.getDefaultReadParam() may be called before the input source is set", "value": "precede"}}, "end": {"identity": 15516, "labels": ["method"], "properties": {"name": "javax.imageio.ImageReader.setInput(Object,boolean,boolean)", "className": "javax.imageio.ImageReader"}}}]},
{"segments": [{"start": {"identity": 15533, "labels": ["method"], "properties": {"name": "javax.imageio.ImageReader.getDefaultReadParam()", "className": "javax.imageio.ImageReader"}}, "relationship": {"identity": 85148, "start": 15533, "end": 15517, "type": "c_o", "properties": {"description": "javax.imageio.ImageReader.getDefaultReadParam() may be called before the input source is set", "value": "precede"}}, "end": {"identity": 15517, "labels": ["method"], "properties": {"name": "javax.imageio.ImageReader.setInput(Object,boolean)", "className": "javax.imageio.ImageReader"}}}]},
{"segments": [{"start": {"identity": 15533, "labels": ["method"], "properties": {"name": "javax.imageio.ImageReader.getDefaultReadParam()", "className": "javax.imageio.ImageReader"}}, "relationship": {"identity": 85149, "start": 15533, "end": 15518, "type": "c_o", "properties": {"description": "javax.imageio.ImageReader.getDefaultReadParam() may be called before the input source is set", "value": "precede"}}, "end": {"identity": 15518, "labels": ["method"], "properties": {"name": "javax.imageio.ImageReader.setInput(Object)", "className": "javax.imageio.ImageReader"}}}]},
{"segments": [{"start": {"identity": 20124, "labels": ["method"], "properties": {"name": "javax.swing.JOptionPane.selectInitialValue()", "className": "javax.swing.JOptionPane"}}, "relationship": {"identity": 85150, "start": 20124, "end": 19425, "type": "c_o", "properties": {"description": "javax.swing.JOptionPane.selectInitialValue() should be invoked after the window containing the option pane is made visible", "value": "follow"}}, "end": {"identity": 19425, "labels": ["method"], "properties": {"name": "javax.swing.JComponent.setVisible(boolean)", "className": "javax.swing.JComponent"}}}]},
{"segments": [{"start": {"identity": 21737, "labels": ["method"], "properties": {"name": "javax.swing.plaf.LayerUI.eventDispatched(AWTEvent,JLayer&lt;?)", "className": "javax.swing.plaf.LayerUI"}}, "relationship": {"identity": 85159, "start": 21737, "end": 19835, "type": "c_o", "properties": {"description": "To enable the AWTEvents of a particular type, you call javax.swing.JLayer.setLayerEventMask(long) in installUI(javax.swing.JComponent) and set the layer event mask to 0 in uninstallUI(javax.swing.JComponent) after that.", "value": "precede"}}, "end": {"identity": 19835, "labels": ["method"], "properties": {"name": "javax.swing.JLayer.setLayerEventMask(long)", "className": "javax.swing.JLayer"}}}]},
{"segments": [{"start": {"identity": 20847, "labels": ["method"], "properties": {"name": "javax.swing.JTree.setToggleClickCount(int)", "className": "javax.swing.JTree"}}, "relationship": {"identity": 85155, "start": 20847, "end": 20896, "type": "c_o", "properties": {"description": "javax.swing.JTree.setToggleClickCount(int) sets the number of mouse clicks before a node will expand or close", "value": "precede"}}, "end": {"identity": 20896, "labels": ["method"], "properties": {"name": "javax.swing.JTree.expandPath(TreePath)", "className": "javax.swing.JTree"}}}]},
{"segments": [{"start": {"identity": 20847, "labels": ["method"], "properties": {"name": "javax.swing.JTree.setToggleClickCount(int)", "className": "javax.swing.JTree"}}, "relationship": {"identity": 85156, "start": 20847, "end": 20897, "type": "c_o", "properties": {"description": "javax.swing.JTree.setToggleClickCount(int) sets the number of mouse clicks before a node will expand or close", "value": "precede"}}, "end": {"identity": 20897, "labels": ["method"], "properties": {"name": "javax.swing.JTree.expandRow(int)", "className": "javax.swing.JTree"}}}]},
{"segments": [{"start": {"identity": 20847, "labels": ["method"], "properties": {"name": "javax.swing.JTree.setToggleClickCount(int)", "className": "javax.swing.JTree"}}, "relationship": {"identity": 85157, "start": 20847, "end": 20898, "type": "c_o", "properties": {"description": "javax.swing.JTree.setToggleClickCount(int) sets the number of mouse clicks before a node will expand or close", "value": "precede"}}, "end": {"identity": 20898, "labels": ["method"], "properties": {"name": "javax.swing.JTree.collapsePath(TreePath)", "className": "javax.swing.JTree"}}}]},
{"segments": [{"start": {"identity": 20847, "labels": ["method"], "properties": {"name": "javax.swing.JTree.setToggleClickCount(int)", "className": "javax.swing.JTree"}}, "relationship": {"identity": 85158, "start": 20847, "end": 20899, "type": "c_o", "properties": {"description": "javax.swing.JTree.setToggleClickCount(int) sets the number of mouse clicks before a node will expand or close", "value": "precede"}}, "end": {"identity": 20899, "labels": ["method"], "properties": {"name": "javax.swing.JTree.collapseRow(int)", "className": "javax.swing.JTree"}}}]},
{"segments": [{"start": {"identity": 22944, "labels": ["method"], "properties": {"name": "javax.swing.plaf.basic.BasicTreeUI.completeUIInstall()", "className": "javax.swing.plaf.basic.BasicTreeUI"}}, "relationship": {"identity": 85165, "start": 22944, "end": 22942, "type": "c_o", "properties": {"description": "javax.swing.plaf.basic.BasicTreeUI.completeUIInstall() is invoked from installUI after all the defaults/listeners have been installed.", "value": "follow"}}, "end": {"identity": 22942, "labels": ["method"], "properties": {"name": "javax.swing.plaf.basic.BasicTreeUI.installUI(JComponent)", "className": "javax.swing.plaf.basic.BasicTreeUI"}}}]},
{"segments": [{"start": {"identity": 22943, "labels": ["method"], "properties": {"name": "javax.swing.plaf.basic.BasicTreeUI.prepareForUIInstall()", "className": "javax.swing.plaf.basic.BasicTreeUI"}}, "relationship": {"identity": 85162, "start": 22943, "end": 22942, "type": "c_o", "properties": {"description": "javax.swing.plaf.basic.BasicTreeUI.prepareForUIInstall() is invoked after the tree instance variable has been set, but before any defaults/listeners have been installed.", "value": "precede"}}, "end": {"identity": 22942, "labels": ["method"], "properties": {"name": "javax.swing.plaf.basic.BasicTreeUI.installUI(JComponent)", "className": "javax.swing.plaf.basic.BasicTreeUI"}}}]},
{"segments": [{"start": {"identity": 22944, "labels": ["method"], "properties": {"name": "javax.swing.plaf.basic.BasicTreeUI.completeUIInstall()", "className": "javax.swing.plaf.basic.BasicTreeUI"}}, "relationship": {"identity": 85163, "start": 22944, "end": 22945, "type": "c_o", "properties": {"description": "javax.swing.plaf.basic.BasicTreeUI.completeUIInstall() is invoked from installUI after all the defaults/listeners have been installed.", "value": "follow"}}, "end": {"identity": 22945, "labels": ["method"], "properties": {"name": "javax.swing.plaf.basic.BasicTreeUI.installDefaults()", "className": "javax.swing.plaf.basic.BasicTreeUI"}}}]},
{"segments": [{"start": {"identity": 22943, "labels": ["method"], "properties": {"name": "javax.swing.plaf.basic.BasicTreeUI.prepareForUIInstall()", "className": "javax.swing.plaf.basic.BasicTreeUI"}}, "relationship": {"identity": 85160, "start": 22943, "end": 22945, "type": "c_o", "properties": {"description": "javax.swing.plaf.basic.BasicTreeUI.prepareForUIInstall() is invoked after the tree instance variable has been set, but before any defaults/listeners have been installed.", "value": "precede"}}, "end": {"identity": 22945, "labels": ["method"], "properties": {"name": "javax.swing.plaf.basic.BasicTreeUI.installDefaults()", "className": "javax.swing.plaf.basic.BasicTreeUI"}}}]},
{"segments": [{"start": {"identity": 22944, "labels": ["method"], "properties": {"name": "javax.swing.plaf.basic.BasicTreeUI.completeUIInstall()", "className": "javax.swing.plaf.basic.BasicTreeUI"}}, "relationship": {"identity": 85164, "start": 22944, "end": 22946, "type": "c_o", "properties": {"description": "javax.swing.plaf.basic.BasicTreeUI.completeUIInstall() is invoked from installUI after all the defaults/listeners have been installed.", "value": "follow"}}, "end": {"identity": 22946, "labels": ["method"], "properties": {"name": "javax.swing.plaf.basic.BasicTreeUI.installListeners()", "className": "javax.swing.plaf.basic.BasicTreeUI"}}}]},
{"segments": [{"start": {"identity": 22943, "labels": ["method"], "properties": {"name": "javax.swing.plaf.basic.BasicTreeUI.prepareForUIInstall()", "className": "javax.swing.plaf.basic.BasicTreeUI"}}, "relationship": {"identity": 85161, "start": 22943, "end": 22946, "type": "c_o", "properties": {"description": "javax.swing.plaf.basic.BasicTreeUI.prepareForUIInstall() is invoked after the tree instance variable has been set, but before any defaults/listeners have been installed.", "value": "precede"}}, "end": {"identity": 22946, "labels": ["method"], "properties": {"name": "javax.swing.plaf.basic.BasicTreeUI.installListeners()", "className": "javax.swing.plaf.basic.BasicTreeUI"}}}]},
{"segments": [{"start": {"identity": 23017, "labels": ["method"], "properties": {"name": "javax.swing.plaf.basic.BasicTreeUI.isToggleEvent(MouseEvent)", "className": "javax.swing.plaf.basic.BasicTreeUI"}}, "relationship": {"identity": 85166, "start": 23017, "end": 23011, "type": "c_o", "properties": {"description": "javax.swing.plaf.basic.BasicTreeUI.isToggleEvent(MouseEvent) is invoked after javax.swing.plaf.basic.BasicTreeUI.checkForClickInExpandControl(TreePath,int,int), implying the location is not in the expand (toggle) control", "value": "follow"}}, "end": {"identity": 23011, "labels": ["method"], "properties": {"name": "javax.swing.plaf.basic.BasicTreeUI.checkForClickInExpandControl(TreePath,int,int)", "className": "javax.swing.plaf.basic.BasicTreeUI"}}}]},
{"segments": [{"start": {"identity": 25787, "labels": ["method"], "properties": {"name": "javax.swing.text.html.HTMLEditorKit.ParserCallback.handleEndOfLineString(String)", "className": "javax.swing.text.html.HTMLEditorKit.ParserCallback"}}, "relationship": {"identity": 85167, "start": 25787, "end": 25780, "type": "c_o", "properties": {"description": "javax.swing.text.html.HTMLEditorKit.ParserCallback.handleEndOfLineString(String) is invoked after the stream has been parsed, but before?javax.swing.text.html.HTMLEditorKit.ParserCallback.flush().?eol?will be one of \n, \r or \r\n, which ever is encountered the most in parsing the stream.", "value": "precede"}}, "end": {"identity": 25780, "labels": ["method"], "properties": {"name": "javax.swing.text.html.HTMLEditorKit.ParserCallback.flush()", "className": "javax.swing.text.html.HTMLEditorKit"}}}]},
{"segments": [{"start": {"identity": 27334, "labels": ["method"], "properties": {"name": "javax.xml.ws.wsaddressing.W3CEndpointReferenceBuilder.endpointName(QName)", "className": "javax.xml.ws.wsaddressing.W3CEndpointReferenceBuilder"}}, "relationship": {"identity": 85168, "start": 27334, "end": 27333, "type": "c_o", "properties": {"description": "javax.xml.ws.wsaddressing.W3CEndpointReferenceBuilder.endpointName(QName) can only be called after the javax.xml.ws.wsaddressing.W3CEndpointReferenceBuilder.serviceName(QName) method has been called.", "value": "follow"}}, "end": {"identity": 27333, "labels": ["method"], "properties": {"name": "javax.xml.ws.wsaddressing.W3CEndpointReferenceBuilder.serviceName(QName)", "className": "javax.xml.ws.wsaddressing.W3CEndpointReferenceBuilder"}}}]},
{"segments": [{"start": {"identity": 3955, "labels": ["method"], "properties": {"name": "java.awt.Polygon.invalidate()", "className": "java.awt.Polygon"}}, "relationship": {"identity": 85132, "start": 3955, "end": 52753, "type": "c_o", "properties": {"description": "java.awt.Polygon.invalidate() should be called after any direct manipulation of the coordinates in the xpoints or ypoints arrays to avoid inconsistent results from methods such as java.awt.Polygon.contains() that might cache data from earlier computations relating to the vertex coordinates", "value": "precede"}}, "end": {"identity": 52753, "labels": ["method"], "properties": {"name": "java.awt.Polygon.contains()", "className": "java.awt.Polygon"}}}]},
{"segments": [{"start": {"identity": 20732, "labels": ["method"], "properties": {"name": "javax.swing.JTextField.setFont(Font)", "className": "javax.swing.JTextField"}}, "relationship": {"identity": 85154, "start": 20732, "end": 3154, "type": "c_o", "properties": {"description": "java.awt.Container.invalidate() is called after setting the new font", "value": "precede"}}, "end": {"identity": 3154, "labels": ["method"], "properties": {"name": "java.awt.Container.invalidate()", "className": "java.awt.Container"}}}]},
{"segments": [{"start": {"identity": 20713, "labels": ["method"], "properties": {"name": "javax.swing.JTextArea.setColumns(int)", "className": "javax.swing.JTextArea"}}, "relationship": {"identity": 85153, "start": 20713, "end": 3155, "type": "c_o", "properties": {"description": "Does an java.awt.Container.validate() after setting the new value", "value": "precede"}}, "end": {"identity": 3155, "labels": ["method"], "properties": {"name": "java.awt.Container.validate()", "className": "java.awt.Container"}}}]},
{"segments": [{"start": {"identity": 20710, "labels": ["method"], "properties": {"name": "javax.swing.JTextArea.setRows(int)", "className": "javax.swing.JTextArea"}}, "relationship": {"identity": 85152, "start": 20710, "end": 3155, "type": "c_o", "properties": {"description": "javax.swing.JTextArea.setRows(int) calls java.awt.Container.validate() after setting the new value", "value": "precede"}}, "end": {"identity": 3155, "labels": ["method"], "properties": {"name": "java.awt.Container.validate()", "className": "java.awt.Container"}}}]},
{"segments": [{"start": {"identity": 20134, "labels": ["method"], "properties": {"name": "javax.swing.JPasswordField.updateUI()", "className": "javax.swing.JPasswordField"}}, "relationship": {"identity": 85151, "start": 20134, "end": 3155, "type": "c_o", "properties": {"description": "java.awt.Container.validate() is called after setting the UI", "value": "precede"}}, "end": {"identity": 3155, "labels": ["method"], "properties": {"name": "java.awt.Container.validate()", "className": "java.awt.Container"}}}]},
{"segments": [{"start": {"identity": 3955, "labels": ["method"], "properties": {"name": "java.awt.Polygon.invalidate()", "className": "java.awt.Polygon"}}, "relationship": {"identity": 85131, "start": 3955, "end": 3958, "type": "c_o", "properties": {"description": "java.awt.Polygon.invalidate() should be called after any direct manipulation of the coordinates in the xpoints or ypoints arrays to avoid inconsistent results from methods such as java.awt.Polygon.getBounds()  that might cache data from earlier computations relating to the vertex coordinates", "value": "precede"}}, "end": {"identity": 3958, "labels": ["method"], "properties": {"name": "java.awt.Polygon.getBounds()", "className": "java.awt.Polygon"}}}]},
{"segments": [{"start": {"identity": 7314, "labels": ["method"], "properties": {"name": "java.lang.ClassLoader.definePackage(String,String,String,String,String,String,String,URL)", "className": "java.lang.ClassLoader"}}, "relationship": {"identity": 85133, "start": 7314, "end": 7295, "type": "c_o", "properties": {"description": "Packages must be created before the class is defined, and package names must be unique within a class loader and cannot be redefined or changed once created", "value": "follow"}}, "end": {"identity": 7295, "labels": ["method"], "properties": {"name": "java.lang.ClassLoader.defineClass(byte[],int,int)", "className": "java.lang.ClassLoader"}}}]},
{"segments": [{"start": {"identity": 7314, "labels": ["method"], "properties": {"name": "java.lang.ClassLoader.definePackage(String,String,String,String,String,String,String,URL)", "className": "java.lang.ClassLoader"}}, "relationship": {"identity": 85134, "start": 7314, "end": 7296, "type": "c_o", "properties": {"description": "Packages must be created before the class is defined, and package names must be unique within a class loader and cannot be redefined or changed once created", "value": "follow"}}, "end": {"identity": 7296, "labels": ["method"], "properties": {"name": "java.lang.ClassLoader.defineClass(String,byte[],int,int)", "className": "java.lang.ClassLoader"}}}]},
{"segments": [{"start": {"identity": 7314, "labels": ["method"], "properties": {"name": "java.lang.ClassLoader.definePackage(String,String,String,String,String,String,String,URL)", "className": "java.lang.ClassLoader"}}, "relationship": {"identity": 85135, "start": 7314, "end": 7297, "type": "c_o", "properties": {"description": "Packages must be created before the class is defined, and package names must be unique within a class loader and cannot be redefined or changed once created", "value": "follow"}}, "end": {"identity": 7297, "labels": ["method"], "properties": {"name": "java.lang.ClassLoader.defineClass(String,byte[],int,int,ProtectionDomain)", "className": "java.lang.ClassLoader"}}}]},
{"segments": [{"start": {"identity": 7314, "labels": ["method"], "properties": {"name": "java.lang.ClassLoader.definePackage(String,String,String,String,String,String,String,URL)", "className": "java.lang.ClassLoader"}}, "relationship": {"identity": 85136, "start": 7314, "end": 7298, "type": "c_o", "properties": {"description": "Packages must be created before the class is defined, and package names must be unique within a class loader and cannot be redefined or changed once created", "value": "follow"}}, "end": {"identity": 7298, "labels": ["method"], "properties": {"name": "java.lang.ClassLoader.defineClass(String,ByteBuffer,ProtectionDomain)", "className": "java.lang.ClassLoader"}}}]},
{"segments": [{"start": {"identity": 7679, "labels": ["method"], "properties": {"name": "java.lang.SecurityManager.checkRead(String,Object)", "className": "java.lang.SecurityManager"}}, "relationship": {"identity": 85169, "start": 7679, "end": 7668, "type": "c_o", "properties": {"description": "the specified security context must be a security context returned by a previous call to java.lang.SecurityManager.getSecurityContext().", "value": "follow"}}, "end": {"identity": 7668, "labels": ["method"], "properties": {"name": "java.lang.SecurityManager.getSecurityContext()", "className": "java.lang.SecurityManager"}}}]},
{"segments": [{"start": {"identity": 9052, "labels": ["method"], "properties": {"name": "java.nio.Buffer.rewind()", "className": "java.nio.Buffer"}}, "relationship": {"identity": 85137, "start": 9052, "end": 9072, "type": "c_o", "properties": {"description": "Invoke java.nio.Buffer.rewind() before a sequence of channel-write or get operations, assuming that the limit has already been set appropriately", "value": "precede"}}, "end": {"identity": 9072, "labels": ["method"], "properties": {"name": "java.nio.ByteBuffer.get(byte[])", "className": "java.nio.ByteBuffer"}}}]},
{"segments": [{"start": {"identity": 9052, "labels": ["method"], "properties": {"name": "java.nio.Buffer.rewind()", "className": "java.nio.Buffer"}}, "relationship": {"identity": 85138, "start": 9052, "end": 9133, "type": "c_o", "properties": {"description": "Invoke java.nio.Buffer.rewind() before a sequence of channel-write or get operations, assuming that the limit has already been set appropriately", "value": "precede"}}, "end": {"identity": 9133, "labels": ["method"], "properties": {"name": "java.nio.CharBuffer.get(char[])", "className": "java.nio.CharBuffer"}}}]},
{"segments": [{"start": {"identity": 9052, "labels": ["method"], "properties": {"name": "java.nio.Buffer.rewind()", "className": "java.nio.Buffer"}}, "relationship": {"identity": 85139, "start": 9052, "end": 9167, "type": "c_o", "properties": {"description": "Invoke java.nio.Buffer.rewind() before a sequence of channel-write or get operations, assuming that the limit has already been set appropriately", "value": "precede"}}, "end": {"identity": 9167, "labels": ["method"], "properties": {"name": "java.nio.DoubleBuffer.get(double[])", "className": "java.nio.DoubleBuffer"}}}]},
{"segments": [{"start": {"identity": 9052, "labels": ["method"], "properties": {"name": "java.nio.Buffer.rewind()", "className": "java.nio.Buffer"}}, "relationship": {"identity": 85140, "start": 9052, "end": 9192, "type": "c_o", "properties": {"description": "Invoke java.nio.Buffer.rewind() before a sequence of channel-write or get operations, assuming that the limit has already been set appropriately", "value": "precede"}}, "end": {"identity": 9192, "labels": ["method"], "properties": {"name": "java.nio.FloatBuffer.get(float[])", "className": "java.nio.FloatBuffer"}}}]},
{"segments": [{"start": {"identity": 9052, "labels": ["method"], "properties": {"name": "java.nio.Buffer.rewind()", "className": "java.nio.Buffer"}}, "relationship": {"identity": 85141, "start": 9052, "end": 9217, "type": "c_o", "properties": {"description": "Invoke java.nio.Buffer.rewind() before a sequence of channel-write or get operations, assuming that the limit has already been set appropriately", "value": "precede"}}, "end": {"identity": 9217, "labels": ["method"], "properties": {"name": "java.nio.IntBuffer.get(int[])", "className": "java.nio.IntBuffer"}}}]},
{"segments": [{"start": {"identity": 9052, "labels": ["method"], "properties": {"name": "java.nio.Buffer.rewind()", "className": "java.nio.Buffer"}}, "relationship": {"identity": 85142, "start": 9052, "end": 9242, "type": "c_o", "properties": {"description": "Invoke java.nio.Buffer.rewind() before a sequence of channel-write or get operations, assuming that the limit has already been set appropriately", "value": "precede"}}, "end": {"identity": 9242, "labels": ["method"], "properties": {"name": "java.nio.LongBuffer.get(long[])", "className": "java.nio.LongBuffer"}}}]},
{"segments": [{"start": {"identity": 9052, "labels": ["method"], "properties": {"name": "java.nio.Buffer.rewind()", "className": "java.nio.Buffer"}}, "relationship": {"identity": 85143, "start": 9052, "end": 9270, "type": "c_o", "properties": {"description": "Invoke java.nio.Buffer.rewind() before a sequence of channel-write or get operations, assuming that the limit has already been set appropriately", "value": "precede"}}, "end": {"identity": 9270, "labels": ["method"], "properties": {"name": "java.nio.ShortBuffer.get(short[])", "className": "java.nio.ShortBuffer"}}}]},
{"segments": [{"start": {"identity": 10035, "labels": ["method"], "properties": {"name": "java.security.KeyStore.Builder.getProtectionParameter(String)", "className": "java.security.KeyStore.Builder"}}, "relationship": {"identity": 85144, "start": 10035, "end": 10034, "type": "c_o", "properties": {"description": "java.security.KeyStore.Builder.getKeyStore() must be invoked before java.security.KeyStore.Builder.getProtectionParameter(String) may be called", "value": "follow"}}, "end": {"identity": 10034, "labels": ["method"], "properties": {"name": "java.security.KeyStore.Builder.getKeyStore()", "className": "java.security.KeyStore.Builder"}}}]},
{"segments": [{"start": {"identity": 12717, "labels": ["method"], "properties": {"name": "java.util.GregorianCalendar.getWeekYear()", "className": "java.util.GregorianCalendar"}}, "relationship": {"identity": 85145, "start": 12717, "end": 12493, "type": "c_o", "properties": {"description": "java.util.Calendar.complete() before calculating the week year", "value": "follow"}}, "end": {"identity": 12493, "labels": ["method"], "properties": {"name": "java.util.Calendar.complete()", "className": "java.util.Calendar"}}}]},
{"segments": [{"start": {"identity": 14862, "labels": ["method"], "properties": {"name": "java.util.regex.Matcher.appendTail(StringBuffer)", "className": "java.util.regex.Matcher"}}, "relationship": {"identity": 85146, "start": 14862, "end": 14861, "type": "c_o", "properties": {"description": "java.util.regex.Matcher.appendTail(StringBuffer) is intended to be invoked after one or more invocations of the java.util.regex.Matcher.appendReplacement(StringBuffer,String) method in order to copy the remainder of the input sequence", "value": "follow"}}, "end": {"identity": 14861, "labels": ["method"], "properties": {"name": "java.util.regex.Matcher.appendReplacement(StringBuffer,String)", "className": "java.util.regex.Matcher"}}}]},
{"segments": [{"start": {"identity": 15533, "labels": ["method"], "properties": {"name": "javax.imageio.ImageReader.getDefaultReadParam()", "className": "javax.imageio.ImageReader"}}, "relationship": {"identity": 85147, "start": 15533, "end": 15516, "type": "c_o", "properties": {"description": "javax.imageio.ImageReader.getDefaultReadParam() may be called before the input source is set", "value": "precede"}}, "end": {"identity": 15516, "labels": ["method"], "properties": {"name": "javax.imageio.ImageReader.setInput(Object,boolean,boolean)", "className": "javax.imageio.ImageReader"}}}]},
{"segments": [{"start": {"identity": 15533, "labels": ["method"], "properties": {"name": "javax.imageio.ImageReader.getDefaultReadParam()", "className": "javax.imageio.ImageReader"}}, "relationship": {"identity": 85148, "start": 15533, "end": 15517, "type": "c_o", "properties": {"description": "javax.imageio.ImageReader.getDefaultReadParam() may be called before the input source is set", "value": "precede"}}, "end": {"identity": 15517, "labels": ["method"], "properties": {"name": "javax.imageio.ImageReader.setInput(Object,boolean)", "className": "javax.imageio.ImageReader"}}}]},
{"segments": [{"start": {"identity": 15533, "labels": ["method"], "properties": {"name": "javax.imageio.ImageReader.getDefaultReadParam()", "className": "javax.imageio.ImageReader"}}, "relationship": {"identity": 85149, "start": 15533, "end": 15518, "type": "c_o", "properties": {"description": "javax.imageio.ImageReader.getDefaultReadParam() may be called before the input source is set", "value": "precede"}}, "end": {"identity": 15518, "labels": ["method"], "properties": {"name": "javax.imageio.ImageReader.setInput(Object)", "className": "javax.imageio.ImageReader"}}}]},
{"segments": [{"start": {"identity": 20124, "labels": ["method"], "properties": {"name": "javax.swing.JOptionPane.selectInitialValue()", "className": "javax.swing.JOptionPane"}}, "relationship": {"identity": 85150, "start": 20124, "end": 19425, "type": "c_o", "properties": {"description": "javax.swing.JOptionPane.selectInitialValue() should be invoked after the window containing the option pane is made visible", "value": "follow"}}, "end": {"identity": 19425, "labels": ["method"], "properties": {"name": "javax.swing.JComponent.setVisible(boolean)", "className": "javax.swing.JComponent"}}}]},
{"segments": [{"start": {"identity": 21737, "labels": ["method"], "properties": {"name": "javax.swing.plaf.LayerUI.eventDispatched(AWTEvent,JLayer&lt;?)", "className": "javax.swing.plaf.LayerUI"}}, "relationship": {"identity": 85159, "start": 21737, "end": 19835, "type": "c_o", "properties": {"description": "To enable the AWTEvents of a particular type, you call javax.swing.JLayer.setLayerEventMask(long) in installUI(javax.swing.JComponent) and set the layer event mask to 0 in uninstallUI(javax.swing.JComponent) after that.", "value": "precede"}}, "end": {"identity": 19835, "labels": ["method"], "properties": {"name": "javax.swing.JLayer.setLayerEventMask(long)", "className": "javax.swing.JLayer"}}}]},
{"segments": [{"start": {"identity": 20847, "labels": ["method"], "properties": {"name": "javax.swing.JTree.setToggleClickCount(int)", "className": "javax.swing.JTree"}}, "relationship": {"identity": 85155, "start": 20847, "end": 20896, "type": "c_o", "properties": {"description": "javax.swing.JTree.setToggleClickCount(int) sets the number of mouse clicks before a node will expand or close", "value": "precede"}}, "end": {"identity": 20896, "labels": ["method"], "properties": {"name": "javax.swing.JTree.expandPath(TreePath)", "className": "javax.swing.JTree"}}}]},
{"segments": [{"start": {"identity": 20847, "labels": ["method"], "properties": {"name": "javax.swing.JTree.setToggleClickCount(int)", "className": "javax.swing.JTree"}}, "relationship": {"identity": 85156, "start": 20847, "end": 20897, "type": "c_o", "properties": {"description": "javax.swing.JTree.setToggleClickCount(int) sets the number of mouse clicks before a node will expand or close", "value": "precede"}}, "end": {"identity": 20897, "labels": ["method"], "properties": {"name": "javax.swing.JTree.expandRow(int)", "className": "javax.swing.JTree"}}}]},
{"segments": [{"start": {"identity": 20847, "labels": ["method"], "properties": {"name": "javax.swing.JTree.setToggleClickCount(int)", "className": "javax.swing.JTree"}}, "relationship": {"identity": 85157, "start": 20847, "end": 20898, "type": "c_o", "properties": {"description": "javax.swing.JTree.setToggleClickCount(int) sets the number of mouse clicks before a node will expand or close", "value": "precede"}}, "end": {"identity": 20898, "labels": ["method"], "properties": {"name": "javax.swing.JTree.collapsePath(TreePath)", "className": "javax.swing.JTree"}}}]},
{"segments": [{"start": {"identity": 20847, "labels": ["method"], "properties": {"name": "javax.swing.JTree.setToggleClickCount(int)", "className": "javax.swing.JTree"}}, "relationship": {"identity": 85158, "start": 20847, "end": 20899, "type": "c_o", "properties": {"description": "javax.swing.JTree.setToggleClickCount(int) sets the number of mouse clicks before a node will expand or close", "value": "precede"}}, "end": {"identity": 20899, "labels": ["method"], "properties": {"name": "javax.swing.JTree.collapseRow(int)", "className": "javax.swing.JTree"}}}]},
{"segments": [{"start": {"identity": 22944, "labels": ["method"], "properties": {"name": "javax.swing.plaf.basic.BasicTreeUI.completeUIInstall()", "className": "javax.swing.plaf.basic.BasicTreeUI"}}, "relationship": {"identity": 85165, "start": 22944, "end": 22942, "type": "c_o", "properties": {"description": "javax.swing.plaf.basic.BasicTreeUI.completeUIInstall() is invoked from installUI after all the defaults/listeners have been installed.", "value": "follow"}}, "end": {"identity": 22942, "labels": ["method"], "properties": {"name": "javax.swing.plaf.basic.BasicTreeUI.installUI(JComponent)", "className": "javax.swing.plaf.basic.BasicTreeUI"}}}]},
{"segments": [{"start": {"identity": 22943, "labels": ["method"], "properties": {"name": "javax.swing.plaf.basic.BasicTreeUI.prepareForUIInstall()", "className": "javax.swing.plaf.basic.BasicTreeUI"}}, "relationship": {"identity": 85162, "start": 22943, "end": 22942, "type": "c_o", "properties": {"description": "javax.swing.plaf.basic.BasicTreeUI.prepareForUIInstall() is invoked after the tree instance variable has been set, but before any defaults/listeners have been installed.", "value": "precede"}}, "end": {"identity": 22942, "labels": ["method"], "properties": {"name": "javax.swing.plaf.basic.BasicTreeUI.installUI(JComponent)", "className": "javax.swing.plaf.basic.BasicTreeUI"}}}]},
{"segments": [{"start": {"identity": 22944, "labels": ["method"], "properties": {"name": "javax.swing.plaf.basic.BasicTreeUI.completeUIInstall()", "className": "javax.swing.plaf.basic.BasicTreeUI"}}, "relationship": {"identity": 85163, "start": 22944, "end": 22945, "type": "c_o", "properties": {"description": "javax.swing.plaf.basic.BasicTreeUI.completeUIInstall() is invoked from installUI after all the defaults/listeners have been installed.", "value": "follow"}}, "end": {"identity": 22945, "labels": ["method"], "properties": {"name": "javax.swing.plaf.basic.BasicTreeUI.installDefaults()", "className": "javax.swing.plaf.basic.BasicTreeUI"}}}]},
{"segments": [{"start": {"identity": 22943, "labels": ["method"], "properties": {"name": "javax.swing.plaf.basic.BasicTreeUI.prepareForUIInstall()", "className": "javax.swing.plaf.basic.BasicTreeUI"}}, "relationship": {"identity": 85160, "start": 22943, "end": 22945, "type": "c_o", "properties": {"description": "javax.swing.plaf.basic.BasicTreeUI.prepareForUIInstall() is invoked after the tree instance variable has been set, but before any defaults/listeners have been installed.", "value": "precede"}}, "end": {"identity": 22945, "labels": ["method"], "properties": {"name": "javax.swing.plaf.basic.BasicTreeUI.installDefaults()", "className": "javax.swing.plaf.basic.BasicTreeUI"}}}]},
{"segments": [{"start": {"identity": 22944, "labels": ["method"], "properties": {"name": "javax.swing.plaf.basic.BasicTreeUI.completeUIInstall()", "className": "javax.swing.plaf.basic.BasicTreeUI"}}, "relationship": {"identity": 85164, "start": 22944, "end": 22946, "type": "c_o", "properties": {"description": "javax.swing.plaf.basic.BasicTreeUI.completeUIInstall() is invoked from installUI after all the defaults/listeners have been installed.", "value": "follow"}}, "end": {"identity": 22946, "labels": ["method"], "properties": {"name": "javax.swing.plaf.basic.BasicTreeUI.installListeners()", "className": "javax.swing.plaf.basic.BasicTreeUI"}}}]},
{"segments": [{"start": {"identity": 22943, "labels": ["method"], "properties": {"name": "javax.swing.plaf.basic.BasicTreeUI.prepareForUIInstall()", "className": "javax.swing.plaf.basic.BasicTreeUI"}}, "relationship": {"identity": 85161, "start": 22943, "end": 22946, "type": "c_o", "properties": {"description": "javax.swing.plaf.basic.BasicTreeUI.prepareForUIInstall() is invoked after the tree instance variable has been set, but before any defaults/listeners have been installed.", "value": "precede"}}, "end": {"identity": 22946, "labels": ["method"], "properties": {"name": "javax.swing.plaf.basic.BasicTreeUI.installListeners()", "className": "javax.swing.plaf.basic.BasicTreeUI"}}}]},
{"segments": [{"start": {"identity": 23017, "labels": ["method"], "properties": {"name": "javax.swing.plaf.basic.BasicTreeUI.isToggleEvent(MouseEvent)", "className": "javax.swing.plaf.basic.BasicTreeUI"}}, "relationship": {"identity": 85166, "start": 23017, "end": 23011, "type": "c_o", "properties": {"description": "javax.swing.plaf.basic.BasicTreeUI.isToggleEvent(MouseEvent) is invoked after javax.swing.plaf.basic.BasicTreeUI.checkForClickInExpandControl(TreePath,int,int), implying the location is not in the expand (toggle) control", "value": "follow"}}, "end": {"identity": 23011, "labels": ["method"], "properties": {"name": "javax.swing.plaf.basic.BasicTreeUI.checkForClickInExpandControl(TreePath,int,int)", "className": "javax.swing.plaf.basic.BasicTreeUI"}}}]},
{"segments": [{"start": {"identity": 25787, "labels": ["method"], "properties": {"name": "javax.swing.text.html.HTMLEditorKit.ParserCallback.handleEndOfLineString(String)", "className": "javax.swing.text.html.HTMLEditorKit.ParserCallback"}}, "relationship": {"identity": 85167, "start": 25787, "end": 25780, "type": "c_o", "properties": {"description": "javax.swing.text.html.HTMLEditorKit.ParserCallback.handleEndOfLineString(String) is invoked after the stream has been parsed, but before?javax.swing.text.html.HTMLEditorKit.ParserCallback.flush().?eol?will be one of \n, \r or \r\n, which ever is encountered the most in parsing the stream.", "value": "precede"}}, "end": {"identity": 25780, "labels": ["method"], "properties": {"name": "javax.swing.text.html.HTMLEditorKit.ParserCallback.flush()", "className": "javax.swing.text.html.HTMLEditorKit"}}}]},
{"segments": [{"start": {"identity": 27334, "labels": ["method"], "properties": {"name": "javax.xml.ws.wsaddressing.W3CEndpointReferenceBuilder.endpointName(QName)", "className": "javax.xml.ws.wsaddressing.W3CEndpointReferenceBuilder"}}, "relationship": {"identity": 85168, "start": 27334, "end": 27333, "type": "c_o", "properties": {"description": "javax.xml.ws.wsaddressing.W3CEndpointReferenceBuilder.endpointName(QName) can only be called after the javax.xml.ws.wsaddressing.W3CEndpointReferenceBuilder.serviceName(QName) method has been called.", "value": "follow"}}, "end": {"identity": 27333, "labels": ["method"], "properties": {"name": "javax.xml.ws.wsaddressing.W3CEndpointReferenceBuilder.serviceName(QName)", "className": "javax.xml.ws.wsaddressing.W3CEndpointReferenceBuilder"}}}]},
{"segments": [{"start": {"identity": 3955, "labels": ["method"], "properties": {"name": "java.awt.Polygon.invalidate()", "className": "java.awt.Polygon"}}, "relationship": {"identity": 85132, "start": 3955, "end": 52753, "type": "c_o", "properties": {"description": "java.awt.Polygon.invalidate() should be called after any direct manipulation of the coordinates in the xpoints or ypoints arrays to avoid inconsistent results from methods such as java.awt.Polygon.contains() that might cache data from earlier computations relating to the vertex coordinates", "value": "precede"}}, "end": {"identity": 52753, "labels": ["method"], "properties": {"name": "java.awt.Polygon.contains()", "className": "java.awt.Polygon"}}}]}]
